# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-07 04:20
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_mechanic', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientRepairs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(max_length=200)),
                ('car_model', models.CharField(max_length=200)),
                ('license_plate', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=200)),
                ('Issue', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('phone_number', models.IntegerField()),
                ('group', models.CharField(blank=True, choices=[('driver', 'driver'), ('mechanic', 'mechanic')], max_length=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MechProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('garage_name', models.CharField(max_length=255)),
                ('desc', models.TextField(help_text='write a small description about you', max_length=1000)),
                ('town', models.CharField(help_text='ex Nairobi,Nakuru,Rongai', max_length=250)),
                ('estate', models.CharField(help_text='ex SouthB,Bahati', max_length=250)),
                ('dental_removal', models.BooleanField()),
                ('car_spa', models.BooleanField()),
                ('interior_detailing', models.BooleanField()),
                ('general_service', models.BooleanField()),
                ('county', models.CharField(choices=[('N', 'Nairobi'), ('K', 'Kiambu'), ('M', 'Mombasa'), ('Nk', 'Nakuru')], max_length=1)),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mechprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sex', models.CharField(max_length=200)),
                ('survived', models.BooleanField()),
                ('age', models.FloatField()),
                ('ticket_class', models.PositiveSmallIntegerField()),
                ('embarked', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_set', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('summary', models.TextField(blank=True, help_text='Brief overview of the issue', max_length=100)),
                ('mileage', models.IntegerField()),
                ('image', models.ImageField(blank=True, help_text='You can upload a photo here', null=True, upload_to='')),
                ('description', models.TextField(blank=True, help_text='update on regular maintenance', max_length=1000)),
                ('priority', models.CharField(choices=[('High', 'high'), ('medium', 'medium'), ('low', 'low')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('user_name', models.CharField(max_length=100)),
                ('comment', models.CharField(max_length=200)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('mechprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.MechProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_name', models.CharField(help_text='Enter a name/nickname to distinguish the vehicle', max_length=25, unique=True)),
                ('number_plate', models.CharField(max_length=100)),
                ('car_model', models.CharField(blank=True, help_text='ex LandCruiser', max_length=255)),
                ('type', models.CharField(choices=[('Car', 'Car'), ('Lorry', 'Lorry'), ('MotorCycle', 'MotorCycle'), ('ForkLift', 'ForkLift'), ('Bus', 'Bus'), ('Boat', 'Boat'), ('Van', 'Van')], max_length=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/')),
                ('image1', models.ImageField(blank=True, help_text='Add photo', null=True, upload_to='media/')),
                ('image2', models.ImageField(blank=True, help_text='Add photo', null=True, upload_to='media/')),
                ('ownership', models.CharField(choices=[('Owned', 'Owned'), ('leased', 'leased'), ('Rented', 'Rented')], max_length=10)),
                ('status', models.CharField(choices=[('Sold', 'sold'), ('Inactive', 'Inactive'), ('Inactive', 'Inactive'), ('Active', 'Active')], max_length=10)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Make')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='repair',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Vehicle'),
        ),
        migrations.AddField(
            model_name='dashboard',
            name='repair',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Repair'),
        ),
    ]
